version: "3"

services:
  #_________________
  # Api Gateway
  #_________________
  # api-gateway:
  #   build:
  #     context: ./backend/gateway
  #   labels:
  #     - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
  #     - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen=true"
  #   environment:
  #     VIRTUAL_HOST: gateway.localhost
  #     LETSENCRYPT_HOST: gateway.localhost
  #     LETSENCRYPT_EMAIL: ewen.pinson@epitech.eu
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #   expose:
  #     - ${GATEWAY_PORT}
  #   deploy:
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.role == manager
  #     labels:
  #       - "traefik.http.services.api-gateway.loadbalancer.server.port=8000"
  #   networks:
  #     - nginx-proxy
  #     - microservices
  #     - backend

  #_________________
  # Client Front
  #_________________
  client:
    build:
      context: app/client
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen=true"
    environment:
      LETSENCRYPT_HOST: localhost
      VIRTUAL_HOST: localhost
    expose:
      - ${CLIENT_PORT}
    networks:
      - nginx-proxy
      - microservices

  #_________________
  # Database
  #_________________
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - .app/db_data:/var/lib/mysql
    networks:
      - backend
      - microservices

  #_________________
  # Database Manager
  #_________________
  phpmyadmin:
    image: phpmyadmin
    expose:
      - 8080
    environment:
      VIRTUAL_HOST: adminsql.localhost
      LETSENCRYPT_HOST: adminsql.localhost
      PMA_ARBITRARY: 1
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      PMA_HOST: db
    networks:
      - nginx-proxy
      - backend

#_________________
# Micro services
#_________________
# users:
#   image: ./microservice/users
#   environment:
#     - DB_HOST=db
#     - DB_USER=root
#     - DB_PASSWORD=secret
#   deploy:
#     replicas: 2
#     resources:
#       limits:
#         cpus: "0.5"
#         memory: "512M"
#     restart_policy:
#       condition: on-failure-
#   depends_on:
#     - db
#   networks:
#     - microservices
#     - backend

#_________________
# Networks
#_________________
networks:
  backend:
  microservices:
    driver: overlay
    attachable: true
  nginx-proxy:
    external:
      name: nginx-proxy
